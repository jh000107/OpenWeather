{
	"name": "SQL script 1",
	"properties": {
		"content": {
			"query": "-- Drop external table if exists\nIF OBJECT_ID('ExternalWeather', 'U') IS NOT NULL\n    DROP EXTERNAL TABLE ExternalWeather;\nGO\n\n-- Drop internal table if exists\nIF OBJECT_ID('FactWeather', 'U') IS NOT NULL\n    DROP TABLE FactWeather;\nGO\n\n-- Drop external file format if exists\nIF EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'ParquetFileFormat')\n    DROP EXTERNAL FILE FORMAT ParquetFileFormat;\nGO\n\n-- Drop external data source if exists\nIF EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'MyDataSource')\n    DROP EXTERNAL DATA SOURCE MyDataSource;\nGO\n\n\n-- Create external data source to connect to your container\nCREATE EXTERNAL DATA SOURCE MyDataSource \nWITH (\n    LOCATION = 'https://junhuisa.dfs.core.windows.net/blob1'\n);\nGO\n\n-- Create external file format\nCREATE EXTERNAL FILE FORMAT ParquetFileFormat\nWITH (\n    FORMAT_TYPE = PARQUET\n);\nGO\n\nCREATE EXTERNAL TABLE ExternalWeather ( --positionality matters for dedicated tables! Ensure its the correct order of datatypes and correct number\n    clouds_all SMALLINT,\n    feels_like_K FLOAT,\n    humidity SMALLINT,\n    pressure SMALLINT,\n    temp_K FLOAT,\n    temp_max_K FLOAT,\n    temp_min_K FLOAT,\n    rain_1h REAL,\n    snow_1h REAL,\n    wind_deg SMALLINT,\n    wind_gust FLOAT,\n    wind_speed FLOAT,\n    corrected_timestamp INT,\n    location NVARCHAR(100),\n    date_time DATETIME,\n    id NVARCHAR(100),\n    temp_C FLOAT,\n    temp_min_C FLOAT,\n    temp_max_C FLOAT,\n    feels_like_C FLOAT,\n    temp_min_F FLOAT,\n    temp_max_F FLOAT,\n    feels_like_F FLOAT,\n    lon FLOAT,\n    lat FLOAT,\n    weather_id_value INT,\n    weather_main_value NVARCHAR(100),\n    weather_description_value NVARCHAR(100),\n    weather_icon_value NVARCHAR(100),\n    temp_F FLOAT\n)\nWITH (\n    LOCATION = '/gold/processed_weather/processed_weather.parquet', --may be different based on your storage location\n    DATA_SOURCE = MyDataSource,\n    FILE_FORMAT = ParquetFileFormat\n);\nGO\n\n-- Create FactWeather table with matching data types (internal sql table)\nCREATE TABLE FactWeather (\n    id NVARCHAR(100),                             -- String identifier to match ExternalWeather's NVARCHAR(100)\n    date_time DATETIME2,                          -- Higher precision datetime to match ExternalWeather's DATETIME2 usage\n    date DATE,        \n    location NVARCHAR(100),                       -- Shorter NVARCHAR(100) to match ExternalWeather's location column\n    humidity SMALLINT,                            -- Small integer to match ExternalWeather's SMALLINT for humidity\n    pressure SMALLINT,                            -- Small integer to match ExternalWeather's SMALLINT for pressure\n    clouds_all SMALLINT,                          -- Small integer to match ExternalWeather's SMALLINT for clouds_all\n    wind_deg SMALLINT,                            -- Small integer to match ExternalWeather's SMALLINT for wind_deg\n    wind_gust FLOAT,                              -- Float for wind gust data, matching ExternalWeather's FLOAT\n    wind_speed FLOAT,                             -- Float for wind speed, matching ExternalWeather's FLOAT\n    temp_K FLOAT,                                 -- Float to match ExternalWeather's temp_K\n    feels_like_K FLOAT,                           -- Float to match ExternalWeather's feels_like_K\n    temp_max_K FLOAT,                             -- Float to match ExternalWeather's temp_max_K\n    temp_min_K FLOAT,                             -- Float to match ExternalWeather's temp_min_K\n    temp_C FLOAT,                                 -- Float to match ExternalWeather's temp_C\n    feels_like_C FLOAT,                           -- Float to match ExternalWeather's feels_like_C\n    temp_max_C FLOAT,                             -- Float to match ExternalWeather's temp_max_C\n    temp_min_C FLOAT,                             -- Float to match ExternalWeather's temp_min_C\n    temp_F FLOAT,                                 -- Float to match ExternalWeather's temp_F\n    feels_like_F FLOAT,                           -- Float to match ExternalWeather's feels_like_F\n    temp_max_F FLOAT,                             -- Float to match ExternalWeather's temp_max_F\n    temp_min_F FLOAT,                             -- Float to match ExternalWeather's temp_min_F\n    weather_combined_value NVARCHAR(200)          -- NVARCHAR to match ExternalWeather, increased length for combined data\n);\nGO\n\n-- Insert data into FactWeather\n-- wind columns might be null if you didnt ingest them, so remove them from the insert\nINSERT INTO FactWeather (id, date_time, date, location, humidity, pressure, clouds_all, temp_K, feels_like_K, temp_max_K, temp_min_K, temp_C, feels_like_C, temp_max_C, temp_min_C, temp_F, feels_like_F, temp_max_F, temp_min_F, weather_combined_value)\nSELECT \n    id,\n    date_time, \n    CAST(date_time AS DATE) AS date,\n    location,\n    humidity, \n    pressure, \n    clouds_all, \n    temp_K, \n    feels_like_K, \n    temp_max_K, \n    temp_min_K,\n    temp_C,\n    feels_like_C,\n    temp_max_C,\n    temp_min_C,\n    temp_F,\n    feels_like_F,\n    temp_max_F,\n    temp_min_F,\n    CONCAT(weather_id_value, '_', weather_icon_value) AS weather_combined_value\nFROM \n    ExternalWeather;\nGO\n\nSELECT TOP 10 * FROM FactWeather;\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "ds598sqlpool",
				"poolName": "ds598sqlpool"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}