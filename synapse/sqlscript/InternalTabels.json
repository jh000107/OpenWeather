{
	"name": "InternalTabels",
	"properties": {
		"content": {
			"query": "-- Create FactWeather table with matching data types (internal sql table)\nCREATE TABLE FactWeather (\n    id NVARCHAR(100),                             -- String identifier to match ExternalWeather's NVARCHAR(100)\n    date_time DATETIME2,                          -- Higher precision datetime to match ExternalWeather's DATETIME2 usage\n    date DATE,        \n    location NVARCHAR(100),                       -- Shorter NVARCHAR(100) to match ExternalWeather's location column\n    humidity SMALLINT,                            -- Small integer to match ExternalWeather's SMALLINT for humidity\n    pressure SMALLINT,                            -- Small integer to match ExternalWeather's SMALLINT for pressure\n    clouds_all SMALLINT,                          -- Small integer to match ExternalWeather's SMALLINT for clouds_all\n    temp_K FLOAT,                                 -- Float to match ExternalWeather's temp_K\n    feels_like_K FLOAT,                           -- Float to match ExternalWeather's feels_like_K\n    temp_max_K FLOAT,                             -- Float to match ExternalWeather's temp_max_K\n    temp_min_K FLOAT,                             -- Float to match ExternalWeather's temp_min_K\n    temp_C FLOAT,                                 -- Float to match ExternalWeather's temp_C\n    feels_like_C FLOAT,                           -- Float to match ExternalWeather's feels_like_C\n    temp_max_C FLOAT,                             -- Float to match ExternalWeather's temp_max_C\n    temp_min_C FLOAT,                             -- Float to match ExternalWeather's temp_min_C\n    temp_F FLOAT,                                 -- Float to match ExternalWeather's temp_F\n    feels_like_F FLOAT,                           -- Float to match ExternalWeather's feels_like_F\n    temp_max_F FLOAT,                             -- Float to match ExternalWeather's temp_max_F\n    temp_min_F FLOAT,                             -- Float to match ExternalWeather's temp_min_F\n    weather_combined_value NVARCHAR(200)          -- NVARCHAR to match ExternalWeather, increased length for combined data\n);\nGO\n\n-- Insert data into FactWeather\n-- wind columns might be null if you didnt ingest them, so remove them from the insert\nINSERT INTO FactWeather (id, date_time, date, location, humidity, pressure, clouds_all, temp_K, feels_like_K, temp_max_K, temp_min_K, temp_C, feels_like_C, temp_max_C, temp_min_C, temp_F, feels_like_F, temp_max_F, temp_min_F, weather_combined_value)\nSELECT \n    id,\n    date_time, \n    CAST(date_time AS DATE) AS date,\n    location,\n    humidity, \n    pressure, \n    clouds_all, \n    temp_K, \n    feels_like_K, \n    temp_max_K, \n    temp_min_K,\n    temp_C,\n    feels_like_C,\n    temp_max_C,\n    temp_min_C,\n    temp_F,\n    feels_like_F,\n    temp_max_F,\n    temp_min_F,\n    CONCAT(weather_id_value, '_', weather_icon_value) AS weather_combined_value\nFROM \n    ExternalWeather;\nGO\n\n-- Create and load DimAirPollution table\nCREATE TABLE DimAirPollution (\n    id NVARCHAR(100),\n    aqi NVARCHAR(100),\n    co FLOAT,\n    no FLOAT,\n    no2 FLOAT,\n    o3 FLOAT,\n    so2 FLOAT,\n    pm2_5 FLOAT,\n    pm10 FLOAT,\n    nh3 FLOAT\n);\nGO\n\nINSERT INTO DimAirPollution (id, aqi, co, no, no2, o3, so2, pm2_5, pm10, nh3)\nSELECT DISTINCT \n    id, \n    aqi, \n    co, \n    no, \n    no2, \n    o3, \n    so2, \n    pm2_5, \n    pm10, \n    nh3\nFROM \n    ExternalAirPollution;\n\n-- Create and load DimDateTime table\nCREATE TABLE DimDateTime (\n-- A dimension table that breaks down date and time components.\n-- Contains detailed temporal information such as year, month, day, hour, minute, and whether the date is a weekend.\n    date_time DATETIME,\n    date DATE,\n    year INT,\n    month INT,\n    day INT,\n    hour INT,\n    minute INT,\n    second INT,\n    quarter INT,\n    week INT,\n    day_of_week INT,\n    day_name VARCHAR(10),\n    month_name VARCHAR(10),\n    is_weekend BIT\n);\nGO\n\nINSERT INTO DimDateTime (date_time, date, year, month, day, hour, minute, second, quarter, week, day_of_week, day_name, month_name, is_weekend)\nSELECT DISTINCT \n    date_time,\n    CAST(date_time AS DATE) AS date,\n    DATEPART(YEAR, date_time) AS year,\n    DATEPART(MONTH, date_time) AS month,\n    DATEPART(DAY, date_time) AS day,\n    DATEPART(HOUR, date_time) AS hour,\n    DATEPART(MINUTE, date_time) AS minute,\n    DATEPART(SECOND, date_time) AS second,\n    DATEPART(QUARTER, date_time) AS quarter,\n    DATEPART(WEEK, date_time) AS week,\n    DATEPART(WEEKDAY, date_time) AS day_of_week,\n    DATENAME(WEEKDAY, date_time) AS day_name,\n    DATENAME(MONTH, date_time) AS month_name,\n    CASE WHEN DATEPART(WEEKDAY, date_time) IN (1, 7) THEN 1 ELSE 0 END AS is_weekend\nFROM \n    ExternalWeather;\nGO\n\n-- Create and load DimWeatherCondition table\nCREATE TABLE DimWeatherCondition (\n-- A dimension table for weather condition details.\n-- Stores information about different weather conditions, including main weather categories and descriptions, along with a combined weather condition value.\n    weather_id_value VARCHAR(100),\n    weather_icon_value VARCHAR(10),\n    weather_main_value VARCHAR(100),\n    weather_description_value VARCHAR(100),\n    weather_combined_value VARCHAR(110)\n);\nGO\n\nINSERT INTO DimWeatherCondition\nSELECT DISTINCT \n    weather_id_value, \n    weather_icon_value, \n    weather_main_value, \n    weather_description_value,\n    CONCAT(weather_id_value, '_', weather_icon_value) AS weather_combined_value\nFROM \n    ExternalWeather;\nGO\n\n-- Create and load DimDate table\nCREATE TABLE DimDate (\n-- A dimension table focused on date attributes.\n-- Provides date details like year, month, day, quarter, and week, along with names for days and months, and a weekend indicator.\n    date_time DATETIME,\n    date DATE,\n    year INT,\n    month INT,\n    day INT,\n    quarter INT,\n    week INT,\n    day_of_week INT,\n    day_name VARCHAR(10),\n    month_name VARCHAR(10),\n    is_weekend BIT\n);\nGO\n\n-- Populate DimDate Table from ExternalWeather\nINSERT INTO DimDate (date_time, date, year, month, day, quarter, week, day_of_week, day_name, month_name, is_weekend)\nSELECT DISTINCT\n    date_time,\n    CAST(date_time AS DATE) AS date,\n    DATEPART(YEAR, date_time) AS year,\n    DATEPART(MONTH, date_time) AS month,\n    DATEPART(DAY, date_time) AS day,\n    DATEPART(QUARTER, date_time) AS quarter,\n    DATEPART(WEEK, date_time) AS week,\n    DATEPART(WEEKDAY, date_time) AS day_of_week,\n    DATENAME(WEEKDAY, date_time) AS day_name,\n    DATENAME(MONTH, date_time) AS month_name,\n    CASE WHEN DATEPART(WEEKDAY, date_time) IN (1, 7) THEN 1 ELSE 0 END AS is_weekend\nFROM\n    ExternalWeather;\nGO\n\n-- Create and load AggTempExtremes table\nCREATE TABLE AggTempExtremes (\n-- An aggregated table that records temperature extremes.\n-- Stores maximum and minimum temperatures for each date.\n    date DATE,\n    max_temp_F FLOAT,\n    min_temp_F FLOAT\n);\nGO\n\nINSERT INTO AggTempExtremes (date, max_temp_F, min_temp_F)\nSELECT DISTINCT\n    date,\n    max_temp_F,\n    min_temp_F\nFROM\n    ExternalAggTempExtremes\nGO\n\n-- Create and load AggWeatherConditions table\nCREATE TABLE AggWeatherConditions (\n-- An aggregated table that counts occurrences of weather conditions.\n-- Provides the number of instances of each weather condition by date.\n    date DATE,\n    weather_main_value VARCHAR(100),\n    count INT\n);\nGO\n\nINSERT INTO AggWeatherConditions (date, weather_main_value, count)\nSELECT DISTINCT\n    date,\n    weather_main_value,\n    count\nFROM\n    ExternalAggWeatherConditions\nGO\n\n-- Create and load AggWeather table\nCREATE TABLE AggWeather (\n-- An aggregated table that summarizes weather data.\n-- Includes average temperature, humidity, and wind speed, as well as maximum and minimum temperatures for each date.\n    date DATE,\n    avg_temp_F FLOAT,\n    avg_humidity FLOAT,\n    avg_wind_speed FLOAT,\n    max_temp_F FLOAT,\n    min_temp_F FLOAT\n);\nGO\n\nINSERT INTO AggWeather (date, avg_temp_F, avg_humidity, avg_wind_speed, max_temp_F, min_temp_F)\nSELECT DISTINCT\n    date,\n    avg_temp_F,\n    avg_humidity,\n    avg_wind_speed,\n    max_temp_F,\n    min_temp_F\nFROM\n    ExternalAggWeather\nGO\n\n-- Create and load HighPollutionEvents table\nCREATE TABLE HighPollutionEvents (\n-- A table tracking high pollution events.\n-- Contains the count of high pollution occurrences for each date.\n-- REFER TO THE SCHEMA IN synapse\n    date DATE,\n    high_pollution_events INT\n);\nGO\n\nINSERT INTO HighPollutionEvents (date, high_pollution_events)\nSELECT DISTINCT\n    date,\n    high_pollution_events\nFROM\n    ExternalHighPollutionEvents\nGO\n\n-- Create and load AggPollutants table\nCREATE TABLE AggPollutants (\n-- An aggregated table for air pollutant data.\n-- Stores average concentrations of various pollutants (CO, NO2, O3, etc.) by date.\n    date DATE,\n    avg_co FLOAT,\n    avg_no2 FLOAT,\n    avg_o3 FLOAT,\n    avg_so2 FLOAT,\n    avg_pm2_5 FLOAT,\n    avg_pm10 FLOAT\n);\nGO\n\nINSERT INTO AggPollutants (date, avg_co, avg_no2, avg_o3, avg_so2, avg_pm2_5, avg_pm10)\nSELECT DISTINCT\n    date,\n    avg_co,\n    avg_no2,\n    avg_o3,\n    avg_so2,\n    avg_pm2_5,\n    avg_pm10\nFROM\n    ExternalAggPollutants\nGO\n\n-- Create and load AggAQI table\nCREATE TABLE AggAQI (\n-- An aggregated table for Air Quality Index (AQI) data.\n-- Contains average AQI values for each date.\n    date DATE,\n    avg_us_aqi FLOAT\n);\nGO\n\nINSERT INTO AggAQI (date, avg_us_aqi)\nSELECT DISTINCT\n    date,\n    avg_us_aqi\nFROM ExternalAggAQI\nGO\n\nCREATE TABLE DimLocation (\n    date_time DATETIME2,\n    date DATE,\n    location NVARCHAR(100)\n);\nGO\n\nINSERT INTO DimLocation (date_time, date, loction)\nSELECT DISTINCT\n    date_time,\n    CAST(date_time AS DATE) AS date,\n    location\nFROM ExternalWeather\nGO\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "ds598sqlpool",
				"poolName": "ds598sqlpool"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}