{
	"name": "InternalTabels",
	"properties": {
		"content": {
			"query": "-- Create FactWeather table with matching data types (internal sql table)\nCREATE TABLE FactWeather (\n    id NVARCHAR(100),                             -- String identifier to match ExternalWeather's NVARCHAR(100)\n    date_time DATETIME2,                          -- Higher precision datetime to match ExternalWeather's DATETIME2 usage\n    date DATE,        \n    location NVARCHAR(100),                       -- Shorter NVARCHAR(100) to match ExternalWeather's location column\n    humidity SMALLINT,                            -- Small integer to match ExternalWeather's SMALLINT for humidity\n    pressure SMALLINT,                            -- Small integer to match ExternalWeather's SMALLINT for pressure\n    clouds_all SMALLINT,                          -- Small integer to match ExternalWeather's SMALLINT for clouds_all\n    temp_K FLOAT,                                 -- Float to match ExternalWeather's temp_K\n    feels_like_K FLOAT,                           -- Float to match ExternalWeather's feels_like_K\n    temp_max_K FLOAT,                             -- Float to match ExternalWeather's temp_max_K\n    temp_min_K FLOAT,                             -- Float to match ExternalWeather's temp_min_K\n    temp_C FLOAT,                                 -- Float to match ExternalWeather's temp_C\n    feels_like_C FLOAT,                           -- Float to match ExternalWeather's feels_like_C\n    temp_max_C FLOAT,                             -- Float to match ExternalWeather's temp_max_C\n    temp_min_C FLOAT,                             -- Float to match ExternalWeather's temp_min_C\n    temp_F FLOAT,                                 -- Float to match ExternalWeather's temp_F\n    feels_like_F FLOAT,                           -- Float to match ExternalWeather's feels_like_F\n    temp_max_F FLOAT,                             -- Float to match ExternalWeather's temp_max_F\n    temp_min_F FLOAT,                             -- Float to match ExternalWeather's temp_min_F\n    weather_combined_value NVARCHAR(200)          -- NVARCHAR to match ExternalWeather, increased length for combined data\n);\nGO\n\n-- Insert data into FactWeather\n-- wind columns might be null if you didnt ingest them, so remove them from the insert\nINSERT INTO FactWeather (id, date_time, date, location, humidity, pressure, clouds_all, temp_K, feels_like_K, temp_max_K, temp_min_K, temp_C, feels_like_C, temp_max_C, temp_min_C, temp_F, feels_like_F, temp_max_F, temp_min_F, weather_combined_value)\nSELECT \n    id,\n    date_time, \n    CAST(date_time AS DATE) AS date,\n    location,\n    humidity, \n    pressure, \n    clouds_all, \n    temp_K, \n    feels_like_K, \n    temp_max_K, \n    temp_min_K,\n    temp_C,\n    feels_like_C,\n    temp_max_C,\n    temp_min_C,\n    temp_F,\n    feels_like_F,\n    temp_max_F,\n    temp_min_F,\n    CONCAT(weather_id_value, '_', weather_icon_value) AS weather_combined_value\nFROM \n    ExternalWeather;\nGO\n\n-- Create and load DimAirPollution table\nCREATE TABLE DimAirPollution (\n    id NVARCHAR(100),\n    aqi NVARCHAR(100),\n    co FLOAT,\n    no FLOAT,\n    no2 FLOAT,\n    o3 FLOAT,\n    so2 FLOAT,\n    pm2_5 FLOAT,\n    pm10 FLOAT,\n    nh3 FLOAT\n);\nGO\n\nINSERT INTO DimAirPollution (id, aqi, co, no, no2, o3, so2, pm2_5, pm10, nh3)\nSELECT DISTINCT \n    id, \n    aqi, \n    co, \n    no, \n    no2, \n    o3, \n    so2, \n    pm2_5, \n    pm10, \n    nh3\nFROM \n    ExternalAirPollution;\n\n-- Create and load DimDateTime table\nCREATE TABLE DimDateTime (\n-- A dimension table that breaks down date and time components.\n-- Contains detailed temporal information such as year, month, day, hour, minute, and whether the date is a weekend.\n    date_time DATETIME,\n    date DATE,\n    year INT,\n    month INT,\n    day INT,\n    hour INT,\n    minute INT,\n    second INT,\n    quarter INT,\n    week INT,\n    day_of_week INT,\n    day_name VARCHAR(10),\n    month_name VARCHAR(10),\n    is_weekend BIT\n);\nGO\n\nINSERT INTO DimDateTime (date_time, date, year, month, day, hour, minute, second, quarter, week, day_of_week, day_name, month_name, is_weekend)\nSELECT DISTINCT \n    date_time,\n    CAST(date_time AS DATE) AS date,\n    DATEPART(YEAR, date_time) AS year,\n    DATEPART(MONTH, date_time) AS month,\n    DATEPART(DAY, date_time) AS day,\n    DATEPART(HOUR, date_time) AS hour,\n    DATEPART(MINUTE, date_time) AS minute,\n    DATEPART(SECOND, date_time) AS second,\n    DATEPART(QUARTER, date_time) AS quarter,\n    DATEPART(WEEK, date_time) AS week,\n    DATEPART(WEEKDAY, date_time) AS day_of_week,\n    DATENAME(WEEKDAY, date_time) AS day_name,\n    DATENAME(MONTH, date_time) AS month_name,\n    CASE WHEN DATEPART(WEEKDAY, date_time) IN (1, 7) THEN 1 ELSE 0 END AS is_weekend\nFROM \n    ExternalWeather;\nGO\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "ds598sqlpool",
				"poolName": "ds598sqlpool"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}